/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package pantallas;

import config.bdConn;
import java.awt.Color;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.sql.PreparedStatement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.Date;

public class ingresosalida extends javax.swing.JPanel {

    bdConn conn= new bdConn();
    Connection connect;
    Statement st;
    ResultSet rs;
    PreparedStatement pstmt;

    public static double costoFinal;
    public static String fechaEntrada;
    public static long id;
    public static String propietario;
    public static String placa;
    
    
    public ingresosalida() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bgingresosalida = new javax.swing.JPanel();
        btnRetirar = new javax.swing.JButton();
        rbCarro = new javax.swing.JRadioButton();
        rbMoto = new javax.swing.JRadioButton();
        txtPropietario = new javax.swing.JTextField();
        txtPlaca = new javax.swing.JTextField();
        txtCosto = new javax.swing.JLabel();
        btnIngresar = new javax.swing.JButton();

        setBackground(new java.awt.Color(244, 244, 244));
        setPreferredSize(new java.awt.Dimension(705, 768));

        bgingresosalida.setBackground(new java.awt.Color(244, 244, 244));
        bgingresosalida.setPreferredSize(new java.awt.Dimension(705, 768));

        btnRetirar.setBackground(new java.awt.Color(255, 0, 0));
        btnRetirar.setFont(new java.awt.Font("Roboto", 0, 30)); // NOI18N
        btnRetirar.setText("RETIRAR");
        btnRetirar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnRetirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRetirarActionPerformed(evt);
            }
        });

        rbCarro.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        rbCarro.setText("CARRO");
        rbCarro.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbCarro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbCarroActionPerformed(evt);
            }
        });

        rbMoto.setFont(new java.awt.Font("Roboto", 0, 24)); // NOI18N
        rbMoto.setText("MOTO");
        rbMoto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rbMoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbMotoActionPerformed(evt);
            }
        });

        txtPropietario.setFont(new java.awt.Font("Roboto", 0, 36)); // NOI18N
        txtPropietario.setForeground(new java.awt.Color(204, 204, 204));
        txtPropietario.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPropietario.setText("PROPIETARIO");
        txtPropietario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPropietarioMousePressed(evt);
            }
        });

        txtPlaca.setFont(new java.awt.Font("Roboto", 1, 36)); // NOI18N
        txtPlaca.setForeground(new java.awt.Color(204, 204, 204));
        txtPlaca.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtPlaca.setText("PLACA");
        txtPlaca.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPlacaMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtPlacaMousePressed(evt);
            }
        });

        txtCosto.setFont(new java.awt.Font("Roboto", 0, 18)); // NOI18N
        txtCosto.setText("COSTO POR HORA: ");

        btnIngresar.setBackground(new java.awt.Color(0, 204, 51));
        btnIngresar.setFont(new java.awt.Font("Roboto", 0, 30)); // NOI18N
        btnIngresar.setText("INGRESAR");
        btnIngresar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIngresarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout bgingresosalidaLayout = new javax.swing.GroupLayout(bgingresosalida);
        bgingresosalida.setLayout(bgingresosalidaLayout);
        bgingresosalidaLayout.setHorizontalGroup(
            bgingresosalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgingresosalidaLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(bgingresosalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(bgingresosalidaLayout.createSequentialGroup()
                        .addGap(107, 107, 107)
                        .addComponent(txtPlaca)
                        .addGap(70, 70, 70))
                    .addGroup(bgingresosalidaLayout.createSequentialGroup()
                        .addGap(112, 112, 112)
                        .addComponent(rbCarro, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                        .addGap(142, 142, 142)
                        .addComponent(rbMoto, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                        .addGap(74, 74, 74))
                    .addGroup(bgingresosalidaLayout.createSequentialGroup()
                        .addComponent(txtCosto, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE)
                        .addGap(360, 360, 360))
                    .addGroup(bgingresosalidaLayout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addGroup(bgingresosalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(bgingresosalidaLayout.createSequentialGroup()
                                .addComponent(btnIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                                .addGap(59, 59, 59)
                                .addComponent(btnRetirar, javax.swing.GroupLayout.DEFAULT_SIZE, 224, Short.MAX_VALUE))
                            .addComponent(txtPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, 502, Short.MAX_VALUE))))
                .addGap(98, 98, 98))
        );
        bgingresosalidaLayout.setVerticalGroup(
            bgingresosalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bgingresosalidaLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(txtCosto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(96, 96, 96)
                .addComponent(txtPlaca, javax.swing.GroupLayout.DEFAULT_SIZE, 143, Short.MAX_VALUE)
                .addGap(73, 73, 73)
                .addComponent(txtPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                .addGap(67, 67, 67)
                .addGroup(bgingresosalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rbCarro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(rbMoto, javax.swing.GroupLayout.DEFAULT_SIZE, 47, Short.MAX_VALUE))
                .addGap(47, 47, 47)
                .addGroup(bgingresosalidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRetirar, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                    .addComponent(btnIngresar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(72, 72, 72))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bgingresosalida, javax.swing.GroupLayout.DEFAULT_SIZE, 699, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bgingresosalida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIngresarActionPerformed
        placa = txtPlaca.getText();
        propietario = txtPropietario.getText();
        String tipo;
        LocalDateTime fechaHoraActual = LocalDateTime.now();
        DateTimeFormatter formatter = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
        fechaEntrada = fechaHoraActual.format(formatter);
        
        try{
            if(placa.equals("") || placa.equals("PLACA") || propietario.equals("") || propietario.equals("PROPIETARIO")){
                JOptionPane.showMessageDialog(null, "Ingrese todos los datos");
            }
            else{
                String estado="Estacionado";
                if(rbCarro.isSelected()){
                    tipo="carro";
                }
                else{
                    tipo="moto";
                }
                String sql = "insert into parkingappdb(placa, propietario, tipovehiculo, horaEntrada , estado) values (?, ?, ?, ?, ?)";
                connect= conn.getConnection();
                
                PreparedStatement pstmt= connect.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
                pstmt.setString(1,placa);
                pstmt.setString(2, propietario);
                pstmt.setString(3, tipo);
                pstmt.setString(4, fechaEntrada);
                pstmt.setString(5,estado);
                
                pstmt.executeUpdate();
                ResultSet generatedKeys = pstmt.getGeneratedKeys();
                if(generatedKeys.next()){
                    id = generatedKeys.getLong(1);
                    System.out.println("\nId vehiculo ingresado"+id);
                }

                JOptionPane.showMessageDialog(null, "Vehiculo Agregado");
                txtPlaca.setText("PLACA");
                txtPlaca.setForeground(Color.LIGHT_GRAY);
                txtPropietario.setText("PROPIETARIO");
                txtPropietario.setForeground(Color.LIGHT_GRAY);
                metodosPdf.pdfIngreso();
                rbCarro.setSelected(false);
                rbMoto.setSelected(false);
                                
            }
        } catch (Exception e){}
    }//GEN-LAST:event_btnIngresarActionPerformed

    private void rbCarroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbCarroActionPerformed
        rbMoto.setSelected(false);
    }//GEN-LAST:event_rbCarroActionPerformed

    private void rbMotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbMotoActionPerformed
        rbCarro.setSelected(false);
    }//GEN-LAST:event_rbMotoActionPerformed

    private void btnRetirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRetirarActionPerformed
        placa = txtPlaca.getText();
        String fecha=metodos.obtenerFecha();
        String estado;
        String estado1;
        String tipo= null;
        String horaEntrada= null;
        try{
            if(placa.equals("")){
                JOptionPane.showMessageDialog(null, "Ingrese la placa");
            }
            else{
                estado = "Retirado";
                estado1= "Estacionado";
                
                connect = conn.getConnection();
                
                String selectsql = "SELECT id,tipovehiculo,horaEntrada,propietario FROM parkingappdb WHERE placa=? AND estado =?"; //VERIFICAR EL TIPO DE VEHICULO
                pstmt=connect.prepareStatement(selectsql);
                pstmt.setString(1, placa);
                pstmt.setString(2, estado1);
                rs = pstmt.executeQuery();
                if(rs.next()){
                    propietario=rs.getString("propietario");
                    id=rs.getLong("id");
                    tipo= rs.getString("tipovehiculo");
                    horaEntrada= rs.getString("horaEntrada");
                    System.out.print("\nFecha de entrada "+horaEntrada);
                    System.out.print("\nVehiculo con id: "+id);
                    System.out.print("\nTipo de vehiculo "+tipo);
                    System.out.print("\nPROPIETARIO: "+propietario);
                }else{
                    JOptionPane.showMessageDialog(null, "Vehículo no encontrado o ya retirado");
                    return;
                }
                
                String sql = "UPDATE parkingappdb SET estado=?, horaSalida=? WHERE placa = ? AND estado= ?"; //ACTUALIZAR ESTADO Y FECHA DE SALIDA DEL VEHICULO
                connect= conn.getConnection();
                PreparedStatement pstmt= connect.prepareStatement(sql, Statement.RETURN_GENERATED_KEYS);
                pstmt.setString(1, estado);
                pstmt.setString(2, fecha);
                pstmt.setString(3, placa);
                pstmt.setString(4, estado1);
                
                int filasActualizadas= pstmt.executeUpdate();

                if(filasActualizadas>0){
                    ResultSet generatedKeys = pstmt.getGeneratedKeys();

                    
                    SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
                    try{
                        Date entrada = sdf.parse(horaEntrada);
                        Date salida= sdf.parse(fecha);
                        long difference_In_Time = salida.getTime() - entrada.getTime();     //CALCULA LA DIFERENCIA DE TIEMPO ENTRE LA ENTRADA Y SALIDA EN MINUTOS
                        System.out.print("\nFecha de salida "+fecha);
                        long minutosACobrar = difference_In_Time / (1000*60);
                        System.out.print("\nMinutos A cobrar = "+minutosACobrar);
                        
                        costoFinal = Math.round(minutosACobrar*metodos.precio);      //calcular costo final a pagar
                        System.out.print("\nDebe pagar "+costoFinal);
                        metodos.subirPago();
                        
                    }catch (ParseException e) {
                        e.printStackTrace();}
                    JOptionPane.showMessageDialog(null, "Vehiculo retirado");
                    metodosPdf.pdfSalida();
                    
                }else{
                    JOptionPane.showMessageDialog(null, "Vehículo no encontrado o ya retirado");
                }
                
                txtPlaca.setText("PLACA");
                txtPlaca.setForeground(Color.LIGHT_GRAY);
                txtPropietario.setText("PROPIETARIO");
                txtPropietario.setForeground(Color.LIGHT_GRAY);
                
           }
        }catch(Exception e){e.printStackTrace();}
    }//GEN-LAST:event_btnRetirarActionPerformed

    private void txtPlacaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPlacaMouseClicked

    }//GEN-LAST:event_txtPlacaMouseClicked

    private void txtPlacaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPlacaMousePressed
        if(txtPlaca.getText().equals("PLACA")){
            txtPlaca.setText("");
            txtPlaca.setForeground(Color.black);
        }
        if(txtPropietario.getText().equals("")){
            txtPropietario.setText("PROPIETARIO");
            txtPropietario.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_txtPlacaMousePressed

    private void txtPropietarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPropietarioMousePressed
        if(txtPropietario.getText().equals("PROPIETARIO")){
            txtPropietario.setText("");
            txtPropietario.setForeground(Color.black);
        }
        if(txtPlaca.getText().equals("")){
            txtPlaca.setText("PLACA");
            txtPlaca.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_txtPropietarioMousePressed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bgingresosalida;
    private javax.swing.JButton btnIngresar;
    private javax.swing.JButton btnRetirar;
    private javax.swing.JRadioButton rbCarro;
    private javax.swing.JRadioButton rbMoto;
    public static javax.swing.JLabel txtCosto;
    private javax.swing.JTextField txtPlaca;
    private javax.swing.JTextField txtPropietario;
    // End of variables declaration//GEN-END:variables
}
